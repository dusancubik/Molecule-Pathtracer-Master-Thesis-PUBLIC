if(config.debugCollectingMode == 1){
		let debugCountTest = textureLoad(debugCounter_read,screen_pos,0);
		//if(config.debugMode == 1){
		/*if( debugCountTest.r > 10){
			//if(config.currentSample > 15 && debugCountTest.r==0){
				//dead pixel
				textureStore(color_buffer,screen_pos,vec4f(0.,1.,0.,1.));
				return;
		}*/
		if(config.currentSample == 14){

			if(config.currentIteration == 0){
				if( debugCountTest.r > 10){
					let index = atomicAdd(&debugIndexCounter, 1);
					//debugLineDataArray[index].values[config.currentIteration] = vec4f(ray.origin,f32(index));
					textureStore(debugCounter_write,screen_pos,vec4u(index));
					debugLineDataArray[index].values[config.currentIteration] = vec4f(ray.origin,0.);
					debugLineDataArray[index].data.x = f32(config.currentIteration+1);
				}else{
					textureStore(debugCounter_write,screen_pos,vec4u(9999));
				}
			}else{
				if( debugCountTest.r < 9999){
					let index = debugCountTest.r;
					if(stop_mark == 0.f){
						debugLineDataArray[index].values[config.currentIteration] = vec4f(ray.origin + 1000.f*ray.direction,0.);
					}else{
						debugLineDataArray[index].values[config.currentIteration] = vec4f(ray.origin,0.);
						debugLineDataArray[index].data.x = f32(config.currentIteration+1);
					}
				}
			}

		}
	}