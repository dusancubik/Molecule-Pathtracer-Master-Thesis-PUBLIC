/*
 * -----------------------------------------------------------------------------
 *  Author: Dusan Cubik
 *  Project: Physically Based Renderer for WebGPU
 *  Institution: Masaryk University
 *  Date: 16. 12. 2024
 *  File: Texture.hpp
 *
 *  Description:
 *  The Texture class is responsible for creating and managing textures in a WebGPU application.
 *  The Texture class was generated by ChatGPT, except for the writeMipMaps method, 
 *  which is taken from Elie Michel's LearnWebGPU-Code repository 
 *  (https://github.com/eliemichel/LearnWebGPU-Code/blob/step117/ResourceManager.cpp) which is licensed under the MIT License.
 * -----------------------------------------------------------------------------
 */
#pragma once
#include "wgpu_context.h"
#include <array>
#include "../Utils/stb_image.h"


struct CubemapData {
	WGPUExtent3D size;
	std::array<uint8_t*, 6> pixelData;
};

class Texture {
	public:
		Texture(WGPUDevice _device, int width, int height, WGPUTextureFormat format);

		Texture(WGPUDevice _device, int width, int height, WGPUTextureFormat format, CubemapData cubemapData);
		//bool init(int width, int height, WGPUTextureFormat format);

		WGPUTextureView getTextureView() { return textureView; }
		WGPUSampler getSampler() { return sampler; }

		WGPUTexture texture;
		WGPUTextureView textureView;
		WGPUSampler sampler;

	private:
		void writeMipMaps(WGPUDevice device, WGPUTexture texture, WGPUExtent3D textureSize,	[[maybe_unused]] uint32_t mipLevelCount,  const unsigned char* pixelData,
			WGPUOrigin3D origin);
		WGPUDevice device;
};